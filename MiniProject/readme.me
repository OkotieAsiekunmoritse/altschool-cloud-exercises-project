# MORE IMPORTANT LINUX COMMANDS #
**1. Cal** <br>
This command is used to display a calendar on the system, showcasing the specified month or year

#HOW TO DEPLOY LARAVEL APPLICATION WITH ALL ITS NECESSARY DEPENDENCIES#

## To deploy a laravel app your server needs to first have all the dependencies to run laravel ## 
* PHP <br>
* MYSQL <br>
* APACHE <br>
COMPOSER
 

Set up your droplet or ip from your cloud provider. I used Digital ocean for this.
Set node hostname, install curl, install LAMP(Linux, APache, MySQL, PHP)stack, install ufw, set the hostfile, install composer














There are two methods to deploy this app
 1. using a local machine by installing VM oracle, then spin up an operating system.
 2. using a cloud instance by signing up on AWS amazon, google cloud, linode or any of your choice.
 
 in this tutorial we shall use the first method.
    PREREQUSITES
1. VM oracle installed on your local machine
2. Debian 11 operating system running on the VM oracle
3. stable internet connection
Your newly installed debian 11 system will need to satisfy the requirements below for laravel to function properly.
Apache Web server
MySQL
PHP >= 8.0.2 with OpenSSL, PDO, Mbstring, Tokenizer, XML, Ctype and JSON PHP Extensions.
Composer – an application-level package manager for the PHP
    open your terminal on debian 11
    Run these codes accordingly
$ sudo apt update && sudo apt upgrade -y
$ sudo apt install apache2
$ sudo systemctl start apache2
$ sudo systemctl enable apache2
$ sudo apt-get install ca-certificates apt-transport-https software-properties-common -y
$ echo "deb https://packages.sury.org/php/ $(lsb_release -sc) main" | tee /etc/apt/sources.list.d/sury-php.list
$ sudo wget -qO - https://packages.sury.org/php/apt.gpg | apt-key add -
$ apt-get update -y
$ sudo apt-get install php8.1 libapache2-mod-php php8.1-dev php8.1-zip php8.1-curl php8.1-mbstring php8.1-mysql php8.1-gd php8.1-xml
to check that PHP is installed
$ php -v
    Now install mysql
$ sudo wget https://dev.mysql.com/get/mysql-apt-config_0.8.22-1_all.deb
$ sudo apt install ./mysql-apt-config_0.8.22-1_all.deb
(select mysql server) (select ok)
$ sudo dpkg-reconfigure mysql-apt-config
$ sudo apt update
$ sudo apt install mysql-server
(select recommended) (input a password that will be linked to your database, we will use the password as we progress) (select recommended)
$ sudo systemctl enable --now mysql
$ sudo service mysql status
$ mysql -u root -p
     (enter the previous password you created)
 >SHOW DATABASES;
 >CREATE DATABASE miniprojectdb;
 >\q
 (to exit)
 
     Install Composer
 $ cd ~
 $ sudo curl -sS https://getcomposer.org/installer | php
 $ sudo mv composer.phar  /usr/local/bin/composer
$ sudo chmod +x   /usr/local/bin/composer
$ composer –version
    Now we need to pull the laravel app from github to use it
$ sudo apt install git 
$ git config --global user.name insert name
$ git config --global user.email insert email
        example
$ git config --global user.name "Winnie"
$ git config --global user.email "Winnie@yahoo.com"
    Now to clone the laravel project from github
$ git clone "https://github.com/f1amy/laravel-realworld-example-app.git"
$ sudo mv laravel-realworld-example myapp
$ cd myapp
$ composer install
$ cd ~
$ sudo mv myapp /var/www/html
$ cd /var/www/html/myapp
$ sudo chown -R www-data:www-data /var/www/html/myapp
$ sudo chmod -R 775 /var/www/html/myapp/storage
$ php artisan
$ sudo move .env.example .env
$ sudo nano .env
    Edit the .env file to look exactly like this.
APP_NAME="myapp"
APP_ENV=local
APP_KEY=
APP_DEBUG=true
APP_URL=http://10.0.2.15
APP_PORT=3000
LOG_CHANNEL=stack
LOG_DEPRECATIONS_CHANNEL=null
LOG_LEVEL=debug
DB_CONNECTION=mysql
DB_HOST=mysql
DB_PORT=3306
DB_DATABASE=miniprojectdb
DB_USERNAME=roland
DB_PASSWORD= debian
BROADCAST_DRIVER=log
CACHE_DRIVER=file
    
(save file and close, dont edit any other thing)
(note: replace 10.0.2.15 with your public ip. DB_PASSWORD put the password you created in mysql)
$ sudo php artisan key:generate
$ cd routes
sudo nano web.php
    Now uncomment the last block of code
    
Route::get('/', function () {
    return view('welcome');
});
(note: just remove /* for the last two lines)
(save and close)
$ cd /etc/apache2/sites-available
$ sudo nano laravel.conf
(paste this, and replace your public ip)
 <VirtualHost *:80>
        ServerAdmin webmaster@10.0.2.15
        ServerName 10.0.2.15
        DocumentRoot /var/www/html/myapp/public
        <Directory /var/www/html/myapp/>
                AllowOverride All
                Require all granted
        </Directory>
        ErrorLog ${APACHE_LOG_DIR}/error.log
        CustomLog ${APACHE_LOG_DIR}/access.log combined
</VirtualHost>
(save and close file)
$ sudo a2dissite 000.default.conf
$ sudo a2ensite laravel.conf
$ sudo a2enmod rewrite
$ systemctl reload apache2
$ cd ~
(your app is deployed locally)
(open browser on your debian machine, paste your ip. this should display laravel site) 
